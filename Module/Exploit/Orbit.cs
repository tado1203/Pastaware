using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using VRC.SDKBase;

public class Orbit : Module
{
    public Orbit() : base("Orbit", false, UnityEngine.KeyCode.O) {}

    List<VRC_Pickup> Pickups = new List<VRC_Pickup>();
    VRCPlayerApi Target;
    float Speed = 2f;
    float Distance = 0.5f;
    float Height = 1f;

    public override void Update()
    {
        if (VRCUtil.IsInWorld() && IsEnabled)
        {
            //pasted from AstralPickups
            if (Pickups.Count == 0) return;
            if (Target == null) return;
            
            float degrees = 360 / Pickups.Count;

            int index = 0;
            foreach (var pickup in Pickups.ToList())
            {
                if (pickup == null)
                {
                    Pickups = UnityEngine.Object.FindObjectsOfType<VRC_Pickup>().ToList();
                    
                    return;
                }

                if (Networking.GetOwner(pickup.gameObject) != Networking.LocalPlayer)
                {
                    Networking.SetOwner(Networking.LocalPlayer, pickup.gameObject);
                }

                pickup.transform.position = Target.gameObject.transform.position + new Vector3(Mathf.Sin(Time.time * Speed + degrees * index) * Distance, Height, Mathf.Cos(Time.time * Speed + degrees * index) * Distance);
                index++;
            }
        }
    }

    public override void OnGUI()
    {
        if (VRCUtil.IsInWorld() && IsEnabled)
        {
            int ind = 0;
            foreach (var player in VRCPlayerApi.AllPlayers)
            {
                if (GUI.Button(new Rect(400, ind * 20, 200, 20), player.displayName))
                {
                    Target = player;
                }
                ind++;
            }

            if (GUI.Button(new Rect(600, 0, 50, 20), "Spd +1"))
            {
                Speed++;
            }
            if (GUI.Button(new Rect(650, 0, 50, 20), "Spd -1"))
            {
                Speed--;
            }
            if (GUI.Button(new Rect(600, 20, 50, 20), "Dst +0.1"))
            {
                Distance =+ 0.1f;
            }
            if (GUI.Button(new Rect(650, 20, 50, 20), "Dst -0.1"))
            {
                Distance =- 0.1f;
            }
            if (GUI.Button(new Rect(600, 40, 50, 20), "H +0.1"))
            {
                Height =+ 0.1f;
            }
            if (GUI.Button(new Rect(650, 40, 50, 20), "H -0.1"))
            {
                Height =- 0.1f;
            }
        }
    }

    public override void OnEnable()
    {
        Pickups = UnityEngine.Object.FindObjectsOfType<VRC_Pickup>().ToList();
    }

    public override void OnWorldChange()
    {
        Pickups.Clear();
    }
}